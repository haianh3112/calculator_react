{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","result","setResult","myFunction","e","concat","target","name","clear","del","slice","calculation","eval","error","className","type","placeholder","value","id","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"q2BAIA,SAASA,MAAO,IAAD,UACYC,oDAAS,IADrB,2KACNC,OADM,cACCC,UADD,cAGPC,WAAa,SAACC,GAClBF,UAAUD,OAAOI,OAAOD,EAAEE,OAAOC,QAE7BC,MAAM,WACVN,UAAU,KAENO,IAAI,WACRP,UAAUD,OAAOS,MAAM,GAAG,KAEtBC,YAAY,SAAZA,cACJ,IACET,UAAUU,KAAKX,SACf,MAAOY,OACPX,UAAU,WAGb,OACD,kEAAKY,UAAU,YAAf,SACE,mEAAKA,UAAU,aAAf,UACA,oEAAOC,KAAK,OAAOC,YAAY,IAAIC,MAAOhB,SAC1C,qEAAQa,UAAU,kBAAkBI,GAAG,QAAQC,QAASX,MAAxD,gBACQ,qEAAQM,UAAU,kBAAkBK,QAASV,IAA7C,iBACA,qEAAQF,KAAK,IAAIO,UAAU,kBAAkBK,QAAShB,WAAtD,eACA,qEAAQI,KAAK,IAAKO,UAAU,kBAAkBK,QAAShB,WAAvD,eACA,qEAAQI,KAAK,IAAKY,QAAShB,WAA3B,eACA,qEAAQI,KAAK,IAAKY,QAAShB,WAA3B,eACA,qEAAQI,KAAK,IAAIY,QAAShB,WAA1B,eACA,qEAAQI,KAAK,IAAKO,UAAU,kBAAkBK,QAAShB,WAAvD,eACA,qEAAQI,KAAK,IAAKY,QAAShB,WAA3B,eACA,qEAAQI,KAAK,IAAKY,QAAShB,WAA3B,eACA,qEAAQI,KAAK,IAAIY,QAAShB,WAA1B,eACA,qEAAQI,KAAK,IAAKO,UAAU,kBAAkBK,QAAShB,WAAvD,eACA,qEAAQI,KAAK,IAAIY,QAAShB,WAA1B,eACA,qEAAQI,KAAK,IAAKY,QAAShB,WAA3B,eACA,qEAAQI,KAAK,IAAKY,QAAShB,WAA3B,eACA,qEAAQI,KAAK,IAAKO,UAAU,kBAAkBK,QAAShB,WAAvD,eACA,qEAAQI,KAAK,IAAKY,QAAShB,WAA3B,eACA,qEAAQI,KAAK,IAAKO,UAAU,kBAAkBK,QAAShB,WAAvD,eACA,qEAAQW,UAAU,yBAAyBK,QAASR,YAApD,oBAMGZ,2B,iICvCAqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAChC,EAAA,EAAD,MAEFiC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9e22b07b.chunk.js","sourcesContent":["/* eslint-disable no-eval */\r\nimport './calculator.css';\r\nimport React,{useState} from 'react';\r\n\r\nfunction App() {\r\n  const [result,setResult]=useState(\"\");\r\n\r\n  const myFunction = (e) => {\r\n    setResult(result.concat(e.target.name))\r\n  }\r\n  const clear=()=>{\r\n    setResult(\"\");\r\n  }\r\n  const del=()=>{\r\n    setResult(result.slice(0,-1));\r\n  }\r\n  const calculation=()=>{\r\n    try {\r\n      setResult(eval(result));\r\n    } catch (error) {\r\n      setResult(\"Error\")\r\n    }\r\n  }\r\n   return (\r\n  <div className=\"container\">\r\n    <div className=\"calculator\">\r\n    <input type=\"text\" placeholder=\"0\" value={result} />\r\n    <button className=\"btn btn-primary\" id=\"clear\" onClick={clear}>AC</button>\r\n            <button className=\"btn btn-primary\" onClick={del}>DEL</button>\r\n            <button name=\"%\" className=\"btn btn-primary\" onClick={myFunction}>%</button>\r\n            <button name=\"+\"  className=\"btn btn-primary\" onClick={myFunction}>+</button>\r\n            <button name=\"1\"  onClick={myFunction}>1</button>\r\n            <button name=\"2\"  onClick={myFunction}>2</button>\r\n            <button name=\"3\" onClick={myFunction}>3</button>\r\n            <button name=\"-\"  className=\"btn btn-primary\" onClick={myFunction} >-</button>\r\n            <button name=\"4\"  onClick={myFunction}>4</button>\r\n            <button name=\"5\"  onClick={myFunction}>5</button>\r\n            <button name=\"6\" onClick={myFunction}>6</button>\r\n            <button name=\"*\"  className=\"btn btn-primary\" onClick={myFunction}>*</button>\r\n            <button name=\"7\" onClick={myFunction}>7</button>\r\n            <button name=\"8\"  onClick={myFunction}>8</button>\r\n            <button name=\"9\"  onClick={myFunction}>9</button>\r\n            <button name=\"/\"  className=\"btn btn-primary\" onClick={myFunction}>/</button>\r\n            <button name=\"0\"  onClick={myFunction}>0</button>\r\n            <button name=\".\"  className=\"btn btn-primary\" onClick={myFunction}>.</button>\r\n            <button className=\"result btn btn-primary\" onClick={calculation}>=</button>\r\n    </div>\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}